# Pr√°tica
```{r}
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(tidymodels)
```

Neste cap√≠tulo ser√° aplicaremos os conceitos vistos de ML e R para ....

## Classifica√ß√£o: Pinguins do arquip√©lago Palmer

### **Conhe√ßa os pinguins** üêß

![Obra de¬†\@allison_horst.](images/clipboard-3055016893.png)

Os `palmerpenguins`dados cont√™m medi√ß√µes de tamanho de tr√™s esp√©cies de pinguins observadas em tr√™s ilhas no Arquip√©lago Palmer, na Ant√°rtida.

```{r}
library(palmerpenguins)
glimpse(penguins)

```

![](images/clipboard-1302732821.png){fig-align="center" width="445"}

### Usando head()

```{r}
#|echo: true
```

Usar¬†`head()`¬†pode ser interessante para ter um primeiro olhar para os dados:

```{r}
head(penguins)

```

### Usando arrange()

`arrange()`¬†organiza nossos dados em ordem *crescente*, partindo do menor valor da vari√°vel de interesse at√© o maior (ou em caso da vari√°vel ver qualitativa, ser√° apresentado em ordem alfab√©tica).

```{r}
penguins %>%
  arrange(bill_length_mm) %>%
  head()
```

### Criando um subconjunto com `subset()`

### Aplica√ß√£o de um modelo de classifica√ß√£o

```{r}
# Carregando os pacotes
library(tidymodels)



# Usar o dataset iris, dispon√≠vel por padr√£o no R
data(iris)

# Criar um split treino/teste
set.seed(123)
split <- initial_split(iris, prop = 0.8)
train <- training(split)
test <- testing(split)

# Definir o modelo (regress√£o log√≠stica multinomial)
modelo <- multinom_reg() %>%
  set_engine("nnet") %>%
  set_mode("classification")

# Criar o workflow
workflow <- workflow() %>%
  add_model(modelo) %>%
  add_formula(Species ~ .)

# Ajustar o modelo
ajustado <- fit(workflow, data = train)

# Previs√£o e avalia√ß√£o
pred <- predict(ajustado, new_data = test) %>%
  bind_cols(test)

# M√©tricas de desempenho
metrics(pred, truth = Species, estimate = .pred_class)

# Matriz de confus√£o
conf_mat(pred, truth = Species, estimate = .pred_class)

```
